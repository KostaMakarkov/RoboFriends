{"version":3,"sources":["reportWebVitals.js","Components/SearchComponent/seachbox.js","Components/CardComponent/Card.js","Components/CardComponent/CardList.js","Components/ScrollComponent/scroll.js","Components/AppComponent/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SearchBox","searchfield","searchChange","type","placeholder","onChange","Card","name","email","id","username","alt","src","cardList","robots","map","user","i","Scroll","props","style","overflowY","border","height","margin","padding","children","App","onSearchChange","event","setState","searchField","target","value","state","Robots","fetch","res","json","users","this","filteredRobot","filter","robot","toLowerCase","includes","CardList","Component","ReactDOM","render","document","getElementById"],"mappings":"2NAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCWCQ,EAdG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACI,uBACAC,KAAK,SACLC,YAAY,gBACZC,SAAUH,KCMHI,G,MAXF,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACI,sBAAKD,GAAG,UAAR,UACI,qBAAKE,IAAI,QAAQC,IAAG,+BAA0BH,EAA1B,cACpB,6BAAKF,IACL,6BAAKC,IACL,6BAAKE,SCgBFG,EArBE,SAAC,GAAkB,IAAfC,EAAc,EAAdA,OACb,OACI,8BAEIA,EAAOC,KAAK,SAACC,EAAMC,GACf,OACI,cAAC,EAAD,CAAcV,KAAMO,EAAOG,GAAGV,KAAMC,MAAOM,EAAOG,GAAGT,MAAOE,SAAUI,EAAOG,GAAGP,SAAUD,GAAIK,EAAOG,GAAGR,IAA7FQ,SCDpBC,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,iBAAkBC,OAAQ,QAASC,OAAQ,OAAQC,QAAS,QAAvG,SACKN,EAAMO,YCuCJC,G,wDArCX,aAAc,IAAD,8BACT,gBAeJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAf1C,EAAKC,MAAQ,CACTC,OAAQ,GACRJ,YAAa,IAJR,E,qDAQb,WAAoB,IAAD,OACfK,MAAM,8CACD1C,MAAK,SAAA2C,GAAG,OAAIA,EAAIC,UAChB5C,MAAK,SAAA6C,GAAK,OAAI,EAAKT,SAAS,CAAEK,OAAQI,S,oBAS/C,WAAS,IAAD,EAC0BC,KAAKN,MAA5BC,EADH,EACGA,OAAQJ,EADX,EACWA,YACTU,EAAgBN,EAAOO,QAAO,SAAAC,GAChC,OAAOA,EAAMpC,KAAKqC,cAAcC,SAASd,EAAYa,kBAEzD,OACI,sBAAKnC,GAAG,SAAR,UACI,6CACA,cAAC,EAAD,CAAWP,aAAcsC,KAAKZ,iBAC9B,cAAC,EAAD,UACI,cAACkB,EAAD,CAAUhC,OAAQ2B,a,GA/BpBM,cCAlBC,IAASC,OAAQ,cAAC,EAAD,IAASC,SAASC,eAAe,SAKlD5D,M","file":"static/js/main.004ea676.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nimport React from 'react';\r\nimport './style.css'\r\n\r\nconst SearchBox = ( {searchfield, searchChange }) => {\r\n    return (\r\n        <input\r\n        type=\"search\" \r\n        placeholder=\"Search Robots\"\r\n        onChange={searchChange}\r\n        />\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default SearchBox;","\r\nimport React from 'react';\r\nimport './style.css';\r\n\r\nconst Card = ( {name, email, id, username} ) => {\r\n    return(\r\n        <div id=\"cardDiv\">\r\n            <img alt=\"robot\" src={`https://robohash.org/${id}?200x200`}></img>\r\n            <h3>{name}</h3>\r\n            <h4>{email}</h4>\r\n            <h4>{username}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","\r\nimport React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst cardList = ( { robots } ) => {\r\n        return (\r\n            <div>\r\n                {\r\n                robots.map( (user, i) => {\r\n                    return(\r\n                        <Card key={i} name={robots[i].name} email={robots[i].email} username={robots[i].username} id={robots[i].id}/>\r\n                    )\r\n                })\r\n            }\r\n            </div>\r\n        )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default cardList;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{ overflowY: 'scroll', border: '2px solid blue', height: '500px', margin: '15px', padding: '15px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport SearchBox from '../SearchComponent/seachbox';\r\nimport CardList from '../CardComponent/CardList';\r\nimport Scroll from '../ScrollComponent/scroll';\r\nimport './style.css';\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            Robots: [],\r\n            searchField: ''\r\n        };\r\n    };\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(res => res.json() )\r\n            .then(users => this.setState({ Robots: users})\r\n        ); \r\n    };\r\n\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchField: event.target.value })\r\n    };\r\n\r\n    render(){\r\n        const {Robots, searchField} = this.state;\r\n        const filteredRobot = Robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n        });\r\n        return(\r\n            <div id=\"appDiv\">\r\n                <h1>RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <Scroll>\r\n                    <CardList robots={filteredRobot} />\r\n                </Scroll>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './Components/AppComponent/App';\n\nReactDOM.render( <App /> ,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}